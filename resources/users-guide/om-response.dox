/**
   @page om-response Optical Module Responses

   @author Tyce DeYoung (deyoung@umdgrb.umd.edu)

   @section omresponse The OM Response

    The @c I3OMResponse object holds the information recorded by a
    particular OM in a single event.  It also holds OM-specific
    information added by offline software, such as hit extraction
    results.  A derived class, @c I3MCOMResponse, also includes Monte
    Carlo information, such as the true hit times and the true PMT
    voltage information.

    There are two basic types of information stored
    in the @c OMResponse.  The first type is hardware output, like
    that recorded by the DAQ, which is stored in the 
    @c DataReadoutList.  There are different @c DataReadout classes
    for AMANDA analog readouts, IceCube ATWD and fADC readouts, TWR
    readouts, IceCube soft local coincidence (SLC) readouts, and so
    forth.  @c MCOMResponses also contain an @c MCPMTResponse,
    which contains information about the raw PMT output voltage,
    before processing by the DOM electronics.  The @c MCPMTResponse
    class is presently an abstract class, because the details of the
    implementation of this class have not been fleshed out.

    The other type of information is hit information.  "Hit" is used
    to mean a single photoelectron
    (PE) arrival time.  It does not include amplitude information,
    because it is independent of the hardware.  Hits are stored in 
    @c HitSeries objects in the @c OMResponse.  These @c HitSeries are
    found in the @c RecoHitSeriesData object.
    @c MCOMResponses also contain a special @c HitSeries named
    @c MCHitSeries, which stores the true series of arrival times.
    The layout of the @c OMResponse is shown below.

    <img src="../../dataclasses/resources/users-guide/OMResponseOverview.png">

    Offline software can add new @c DataReadouts or @c HitSeries to
    the @c OMResponse.  "Real" @c DataReadouts -- those recorded by
    the DAQ -- are distinguished from later additions by the @c Raw()
    flag.  The DAQ does not produce hit series, so there is no
    comparable flag for hit series in the @c RecoHitSeriesData list.
    Both the @c DataReadoutList and the @c RecoHitSeriesData are maps,
    so each @c DataReadout or @c RecoHitSeries is identified by a
    unique name.

    @c RecoHitSeries objects (or rather, objects derived from 
    @c RecoHitSeries) are used to store the results of hit extraction
    algorithms which produce lists of PE times.  This is the input
    required for many likelihood reconstruction algorithms.
    Reconstruction algorithms may also make direct use of the 
    @c DataReadout information, without going through the intermediate
    step of hit extraction.

    Routines which preprocess the DAQ information, but not to the
    level of extracting single PEs, store their results in the 
    @c DataReadoutList, as derived (rather than @c Raw()) 
    @c DataReadouts.  Examples would be AMANDA calibration routines or
    algorithms that produce combined waveforms from IceCube ATWD and
    fADC waveforms.

*/
